{"version":3,"file":"index.js","sources":["../../src/index.tsx"],"sourcesContent":["import React from 'react'\nimport { Table } from '@tanstack/react-table'\n\nimport useLocalStorage from './useLocalStorage'\nimport { useIsMounted } from './utils'\n\nimport { Panel, Button } from './styledComponents'\nimport { ThemeProvider, defaultTheme as theme } from './theme'\n// import { getQueryStatusLabel, getQueryStatusColor } from './utils'\nimport Explorer from './Explorer'\nimport Logo from './Logo'\n\ninterface DevtoolsOptions {\n  /**\n   * The react table to attach the devtools to.\n   */\n  table: any\n  /**\n   * Set this true if you want the dev tools to default to being open\n   */\n  initialIsOpen?: boolean\n  /**\n   * Use this to add props to the panel. For example, you can add className, style (merge and override default style), etc.\n   */\n  panelProps?: React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  >\n  /**\n   * Use this to add props to the close button. For example, you can add className, style (merge and override default style), onClick (extend default handler), etc.\n   */\n  closeButtonProps?: React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  >\n  /**\n   * Use this to add props to the toggle button. For example, you can add className, style (merge and override default style), onClick (extend default handler), etc.\n   */\n  toggleButtonProps?: React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  >\n  /**\n   * Use this to render the devtools inside a different type of container element for a11y purposes.\n   * Any string which corresponds to a valid intrinsic JSX element is allowed.\n   * Defaults to 'footer'.\n   */\n  containerElement?: string | any\n}\n\ninterface DevtoolsPanelOptions {\n  /**\n   * The react table to attach the devtools to.\n   */\n  table: any\n  /**\n   * The standard React style object used to style a component with inline styles\n   */\n  style?: React.CSSProperties\n  /**\n   * The standard React className property used to style a component with classes\n   */\n  className?: string\n  /**\n   * A boolean variable indicating whether the panel is open or closed\n   */\n  isOpen?: boolean\n  /**\n   * A function that toggles the open and close state of the panel\n   */\n  setIsOpen: (isOpen: boolean) => void\n}\n\nexport function ReactTableDevtools({\n  initialIsOpen,\n  table,\n  panelProps = {},\n  toggleButtonProps = {},\n  containerElement: Container = 'footer',\n}: DevtoolsOptions): React.ReactElement | null {\n  const rootRef = React.useRef<HTMLDivElement>(null)\n  const panelRef = React.useRef<HTMLDivElement>(null)\n  const [isOpen, setIsOpen] = useLocalStorage(\n    'reactTableDevtoolsOpen',\n    initialIsOpen\n  )\n  const isMounted = useIsMounted()\n\n  const { style: panelStyle = {}, ...otherPanelProps } = panelProps\n\n  const {\n    style: toggleButtonStyle = {},\n    onClick: onToggleClick,\n    ...otherToggleButtonProps\n  } = toggleButtonProps\n\n  // Do not render on the server\n  if (!isMounted()) return null\n\n  return (\n    <Container ref={rootRef} className=\"ReactTableDevtools\">\n      <ThemeProvider theme={theme}>\n        {!isOpen ? (\n          <button\n            type=\"button\"\n            {...otherToggleButtonProps}\n            aria-label=\"Open React Table Devtools\"\n            onClick={e => {\n              setIsOpen(true)\n              onToggleClick && onToggleClick(e)\n            }}\n            style={{\n              background: 'none',\n              border: 0,\n              padding: 0,\n              margin: '.5rem',\n              display: 'inline-flex',\n              fontSize: '1.5em',\n              cursor: 'pointer',\n              width: 'fit-content',\n              ...toggleButtonStyle,\n            }}\n          >\n            <Logo aria-hidden />\n          </button>\n        ) : (\n          <ReactTableDevtoolsPanel\n            ref={panelRef as any}\n            {...otherPanelProps}\n            table={table}\n            isOpen={isOpen}\n            setIsOpen={setIsOpen}\n            style={{\n              maxHeight: '80vh',\n              width: '100%',\n              ...panelStyle,\n            }}\n          />\n        )}\n      </ThemeProvider>\n    </Container>\n  )\n}\n\nexport const ReactTableDevtoolsPanel = React.forwardRef<\n  HTMLDivElement,\n  DevtoolsPanelOptions\n>(function ReactTableDevtoolsPanel(props, ref): React.ReactElement {\n  const {\n    table,\n    isOpen = true,\n    setIsOpen,\n    ...panelProps\n  } = props as DevtoolsPanelOptions & {\n    table: Table<any>\n  }\n\n  // const [activeMatchId, setActiveRouteId] = useLocalStorage(\n  //   'reactTableDevtoolsActiveRouteId',\n  //   '',\n  // )\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Panel ref={ref} className=\"ReactTableDevtoolsPanel\" {...panelProps}>\n        <style\n          dangerouslySetInnerHTML={{\n            __html: `\n            .ReactTableDevtoolsPanel * {\n              scrollbar-color: ${theme.backgroundAlt} ${theme.gray};\n            }\n\n            .ReactTableDevtoolsPanel *::-webkit-scrollbar, .ReactTableDevtoolsPanel scrollbar {\n              width: 1em;\n              height: 1em;\n            }\n\n            .ReactTableDevtoolsPanel *::-webkit-scrollbar-track, .ReactTableDevtoolsPanel scrollbar-track {\n              background: ${theme.backgroundAlt};\n            }\n\n            .ReactTableDevtoolsPanel *::-webkit-scrollbar-thumb, .ReactTableDevtoolsPanel scrollbar-thumb {\n              background: ${theme.gray};\n              border-radius: .5em;\n              border: 3px solid ${theme.backgroundAlt};\n            }\n          `,\n          }}\n        />\n        <div\n          style={{\n            flex: '1 1 500px',\n            minHeight: '40%',\n            maxHeight: '100%',\n            overflow: 'auto',\n            borderRight: `1px solid ${theme.grayAlt}`,\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <div\n            style={{\n              padding: '.5em',\n              background: theme.backgroundAlt,\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <Logo\n              aria-hidden\n              style={{\n                marginRight: '.5em',\n              }}\n              onClick={() => setIsOpen(false)}\n            />\n            <div\n              style={{\n                marginRight: 'auto',\n                fontSize: 'clamp(.8rem, 2vw, 1.3rem)',\n                fontWeight: 'bold',\n              }}\n            >\n              React Table{' '}\n              <span\n                style={{\n                  fontWeight: 100,\n                }}\n              >\n                Devtools\n              </span>\n            </div>\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n              }}\n            >\n              {isOpen ? (\n                <Button\n                  type=\"button\"\n                  aria-label=\"Close React Table Devtools\"\n                  onClick={() => {\n                    setIsOpen(false)\n                  }}\n                >\n                  Close\n                </Button>\n              ) : null}\n            </div>\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              overflowY: 'auto',\n              flex: '1',\n            }}\n          >\n            <div\n              style={{\n                flex: '1 1 auto',\n                padding: '.5em',\n              }}\n            >\n              <Explorer\n                label=\"Instance\"\n                value={table}\n                defaultExpanded={false}\n              />\n              <div\n                style={{\n                  height: '.5rem',\n                }}\n              />\n              <Explorer\n                label=\"State\"\n                value={table.getState()}\n                defaultExpanded={false}\n              />\n              <div\n                style={{\n                  height: '.5rem',\n                }}\n              />\n              <Explorer\n                label=\"Columns\"\n                value={table.getAllColumns()}\n                defaultExpanded={false}\n              />\n            </div>\n            <div\n              style={{\n                flex: '1 1 auto',\n                padding: '.5em',\n              }}\n            >\n              <Explorer\n                label=\"Core Model\"\n                value={table.getCoreRowModel()}\n                defaultExpanded={false}\n              />\n              <Explorer\n                label=\"Filtered Model\"\n                value={table.getFilteredRowModel()}\n                defaultExpanded={false}\n              />\n              <Explorer\n                label=\"Sorted Model\"\n                value={table.getSortedRowModel()}\n                defaultExpanded={false}\n              />\n              <Explorer\n                label=\"Grouped Model\"\n                value={table.getGroupedRowModel()}\n                defaultExpanded={false}\n              />\n              <Explorer\n                label=\"Expanded Model\"\n                value={table.getExpandedRowModel()}\n                defaultExpanded={false}\n              />\n            </div>\n            {/* <div\n              style={{\n                flex: '1 1 auto',\n                padding: '.5em',\n              }}\n            >\n              <Explorer\n                label=\"Row Model\"\n                value={table.getRowModel()}\n                defaultExpanded={false}\n              />\n            </div> */}\n          </div>\n        </div>\n      </Panel>\n    </ThemeProvider>\n  )\n})\n"],"names":["ReactTableDevtools","initialIsOpen","table","panelProps","toggleButtonProps","containerElement","Container","rootRef","React","useRef","panelRef","isOpen","setIsOpen","useLocalStorage","isMounted","useIsMounted","style","panelStyle","otherPanelProps","toggleButtonStyle","onClick","onToggleClick","otherToggleButtonProps","ThemeProvider","theme","_extends","e","background","border","padding","margin","display","fontSize","cursor","width","Logo","maxHeight","ReactTableDevtoolsPanel","forwardRef","props","ref","Panel","__html","backgroundAlt","gray","flex","minHeight","overflow","borderRight","grayAlt","flexDirection","justifyContent","alignItems","marginRight","fontWeight","Button","flexWrap","overflowY","Explorer","height","getState","getAllColumns","getCoreRowModel","getFilteredRowModel","getSortedRowModel","getGroupedRowModel","getExpandedRowModel"],"mappings":"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"}