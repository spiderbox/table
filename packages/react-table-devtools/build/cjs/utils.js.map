{"version":3,"file":"utils.js","sources":["../../src/utils.ts"],"sourcesContent":["import React from 'react'\n\nimport { Theme, useTheme } from './theme'\nimport useMediaQuery from './useMediaQuery'\n\nexport const isServer = typeof window === 'undefined'\n\ntype StyledComponent<T> = T extends 'button'\n  ? React.DetailedHTMLProps<\n      React.ButtonHTMLAttributes<HTMLButtonElement>,\n      HTMLButtonElement\n    >\n  : T extends 'input'\n  ? React.DetailedHTMLProps<\n      React.InputHTMLAttributes<HTMLInputElement>,\n      HTMLInputElement\n    >\n  : T extends 'select'\n  ? React.DetailedHTMLProps<\n      React.SelectHTMLAttributes<HTMLSelectElement>,\n      HTMLSelectElement\n    >\n  : T extends keyof HTMLElementTagNameMap\n  ? React.HTMLAttributes<HTMLElementTagNameMap[T]>\n  : never\n\n// export function getStatusColor(match: RouteMatch, theme: Theme) {\n//   return match.isLoading\n//     ? theme.active\n//     : match.status === 'rejected'\n//     ? theme.danger\n//     : match.status === 'pending'\n//     ? theme.warning\n//     : theme.success\n// }\n\n// export function getQueryStatusLabel(query: Query) {\n//   return query.state.isFetching\n//     ? 'fetching'\n//     : !query.getObserversCount()\n//     ? 'inactive'\n//     : query.isStale()\n//     ? 'stale'\n//     : 'fresh'\n// }\n\ntype Styles =\n  | React.CSSProperties\n  | ((props: Record<string, any>, theme: Theme) => React.CSSProperties)\n\nexport function styled<T extends keyof HTMLElementTagNameMap>(\n  type: T,\n  newStyles: Styles,\n  queries: Record<string, Styles> = {},\n) {\n  return React.forwardRef<HTMLElementTagNameMap[T], StyledComponent<T>>(\n    ({ style, ...rest }, ref) => {\n      const theme = useTheme()\n\n      const mediaStyles = Object.entries(queries).reduce(\n        (current, [key, value]) => {\n          // eslint-disable-next-line react-hooks/rules-of-hooks\n          return useMediaQuery(key)\n            ? {\n                ...current,\n                ...(typeof value === 'function' ? value(rest, theme) : value),\n              }\n            : current\n        },\n        {},\n      )\n\n      return React.createElement(type, {\n        ...rest,\n        style: {\n          ...(typeof newStyles === 'function'\n            ? newStyles(rest, theme)\n            : newStyles),\n          ...style,\n          ...mediaStyles,\n        },\n        ref,\n      })\n    },\n  )\n}\n\nexport function useIsMounted() {\n  const mountedRef = React.useRef(false)\n  const isMounted = React.useCallback(() => mountedRef.current, [])\n\n  React[isServer ? 'useEffect' : 'useLayoutEffect'](() => {\n    mountedRef.current = true\n    return () => {\n      mountedRef.current = false\n    }\n  }, [])\n\n  return isMounted\n}\n\n/**\n * This hook is a safe useState version which schedules state updates in microtasks\n * to prevent updating a component state while React is rendering different components\n * or when the component is not mounted anymore.\n */\nexport function useSafeState<T>(initialState: T): [T, (value: T) => void] {\n  const isMounted = useIsMounted()\n  const [state, setState] = React.useState(initialState)\n\n  const safeSetState = React.useCallback(\n    (value: T) => {\n      scheduleMicrotask(() => {\n        if (isMounted()) {\n          setState(value)\n        }\n      })\n    },\n    [isMounted],\n  )\n\n  return [state, safeSetState]\n}\n\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\nfunction scheduleMicrotask(callback: () => void) {\n  Promise.resolve()\n    .then(callback)\n    .catch((error) =>\n      setTimeout(() => {\n        throw error\n      }),\n    )\n}\n"],"names":["isServer","window","styled","type","newStyles","queries","React","forwardRef","ref","style","rest","theme","useTheme","mediaStyles","Object","entries","reduce","current","key","value","useMediaQuery","createElement","useIsMounted","mountedRef","useRef","isMounted","useCallback"],"mappings":";;;;;;;;;;;;;;;;;;;;;;MAKaA,QAAQ,GAAG,OAAOC,MAAP,KAAkB,YAAnC;AA6CA,SAASC,MAAT,CACLC,IADK,EAELC,SAFK,EAGLC,OAHK,EAIL;AAAA,EAAA,IADAA,OACA,KAAA,KAAA,CAAA,EAAA;AADAA,IAAAA,OACA,GADkC,EAClC,CAAA;AAAA,GAAA;;AACA,EAAA,oBAAOC,yBAAK,CAACC,UAAN,CACL,CAAA,IAAA,EAAqBC,GAArB,KAA6B;AAAA,IAA5B,IAAA;AAAEC,MAAAA,KAAF;AAAS,MAAGC,GAAAA,IAAAA;AAAZ,KAA4B,GAAA,IAAA,CAAA;AAC3B,IAAMC,MAAAA,OAAK,GAAGC,cAAQ,EAAtB,CAAA;AAEA,IAAA,MAAMC,WAAW,GAAGC,MAAM,CAACC,OAAP,CAAeV,OAAf,CAAA,CAAwBW,MAAxB,CAClB,CAACC,OAAD,EAA2B,KAAA,KAAA;AAAA,MAAA,IAAjB,CAACC,GAAD,EAAMC,KAAN,CAAiB,GAAA,KAAA,CAAA;AACzB;AACA,MAAA,OAAOC,wBAAa,CAACF,GAAD,CAAb,GACH,EACE,GAAGD,OADL;AAEE,QAAA,IAAI,OAAOE,KAAP,KAAiB,UAAjB,GAA8BA,KAAK,CAACT,IAAD,EAAOC,OAAP,CAAnC,GAAmDQ,KAAvD,CAAA;AAFF,OADG,GAKHF,OALJ,CAAA;AAMD,KATiB,EAUlB,EAVkB,CAApB,CAAA;AAaA,IAAOX,oBAAAA,yBAAK,CAACe,aAAN,CAAoBlB,IAApB,EAA0B,EAC/B,GAAGO,IAD4B;AAE/BD,MAAAA,KAAK,EAAE,EACL,IAAI,OAAOL,SAAP,KAAqB,UAArB,GACAA,SAAS,CAACM,IAAD,EAAOC,OAAP,CADT,GAEAP,SAFJ,CADK;AAIL,QAAA,GAAGK,KAJE;AAKL,QAAGI,GAAAA,WAAAA;AALE,OAFwB;AAS/BL,MAAAA,GAAAA;AAT+B,KAA1B,CAAP,CAAA;AAWD,GA5BI,CAAP,CAAA;AA8BD,CAAA;AAEM,SAASc,YAAT,GAAwB;AAC7B,EAAA,MAAMC,UAAU,GAAGjB,yBAAK,CAACkB,MAAN,CAAa,KAAb,CAAnB,CAAA;AACA,EAAA,MAAMC,SAAS,GAAGnB,yBAAK,CAACoB,WAAN,CAAkB,MAAMH,UAAU,CAACN,OAAnC,EAA4C,EAA5C,CAAlB,CAAA;AAEAX,EAAAA,yBAAK,CAACN,QAAQ,GAAG,WAAH,GAAiB,iBAA1B,CAAL,CAAkD,MAAM;AACtDuB,IAAAA,UAAU,CAACN,OAAX,GAAqB,IAArB,CAAA;AACA,IAAA,OAAO,MAAM;AACXM,MAAAA,UAAU,CAACN,OAAX,GAAqB,KAArB,CAAA;AACD,KAFD,CAAA;AAGD,GALD,EAKG,EALH,CAAA,CAAA;AAOA,EAAA,OAAOQ,SAAP,CAAA;AACD;;;;;;"}