{"version":3,"file":"Explorer.js","sources":["../../src/Explorer.tsx"],"sourcesContent":["// @ts-nocheck\n\nimport React from 'react'\n\nimport { styled } from './utils'\n\nexport const Entry = styled('div', {\n  fontFamily: 'Menlo, monospace',\n  fontSize: '0.7rem',\n  lineHeight: '1.7',\n  outline: 'none',\n  wordBreak: 'break-word',\n})\n\nexport const Label = styled('span', {\n  cursor: 'pointer',\n  color: 'white',\n})\n\nexport const Value = styled('span', (props, theme) => ({\n  color: theme.danger,\n}))\n\nexport const SubEntries = styled('div', {\n  marginLeft: '.1rem',\n  paddingLeft: '1rem',\n  borderLeft: '2px solid rgba(0,0,0,.15)',\n})\n\nexport const Info = styled('span', {\n  color: 'grey',\n  fontSize: '.7rem',\n})\n\nexport const Expander = ({ expanded, style = {}, ...rest }) => (\n  <span\n    style={{\n      display: 'inline-block',\n      transition: 'all .1s ease',\n      transform: `rotate(${expanded ? 90 : 0}deg) ${style.transform || ''}`,\n      ...style,\n    }}\n  >\n    â–¶\n  </span>\n)\n\nconst DefaultRenderer = ({\n  handleEntry,\n  label,\n  value,\n  // path,\n  subEntries,\n  subEntryPages,\n  type,\n  // depth,\n  expanded,\n  toggle,\n  pageSize,\n  renderer,\n}) => {\n  const [valueSnapshot, setValueSnapshot] = React.useState(undefined)\n  const [expandedPages, setExpandedPages] = React.useState([])\n\n  const refreshValueSnapshot = () => {\n    setValueSnapshot(value())\n  }\n\n  return (\n    <Entry key={label}>\n      {subEntryPages?.length ? (\n        <>\n          <Label onClick={() => toggle()}>\n            <Expander expanded={expanded} /> {label}{' '}\n            <Info>\n              {String(type).toLowerCase() === 'iterable' ? '(Iterable) ' : ''}\n              {subEntries.length} {subEntries.length > 1 ? `items` : `item`}\n            </Info>\n          </Label>\n          {expanded ? (\n            subEntryPages.length === 1 ? (\n              <SubEntries>\n                {subEntries.map((entry) => handleEntry(entry))}\n              </SubEntries>\n            ) : (\n              <SubEntries>\n                {subEntryPages.map((entries, index) => (\n                  <div key={index}>\n                    <Entry>\n                      <Label\n                        onClick={() =>\n                          setExpandedPages((old) =>\n                            old.includes(index)\n                              ? old.filter((d) => d !== index)\n                              : [...old, index],\n                          )\n                        }\n                      >\n                        <Expander expanded={expanded} /> [{index * pageSize} ...{' '}\n                        {index * pageSize + pageSize - 1}]\n                      </Label>\n                      {expandedPages.includes(index) ? (\n                        <SubEntries>\n                          {entries.map((entry) => handleEntry(entry))}\n                        </SubEntries>\n                      ) : null}\n                    </Entry>\n                  </div>\n                ))}\n              </SubEntries>\n            )\n          ) : null}\n        </>\n      ) : type === 'function' ? (\n        <>\n          <Explorer\n            renderer={renderer}\n            label={\n              <button onClick={refreshValueSnapshot}>\n                <Label>{label}</Label> ðŸ”„{' '}\n              </button>\n            }\n            value={valueSnapshot}\n            defaultExpanded={{}}\n          />\n        </>\n      ) : (\n        <>\n          <Label>{label}:</Label>{' '}\n          <Value>\n            {JSON.stringify(value, Object.getOwnPropertyNames(Object(value)))}\n          </Value>\n        </>\n      )}\n    </Entry>\n  )\n}\n\nexport default function Explorer({\n  value,\n  defaultExpanded,\n  renderer = DefaultRenderer,\n  pageSize = 100,\n  depth = 0,\n  ...rest\n}) {\n  const [expanded, setExpanded] = React.useState(defaultExpanded)\n\n  const toggle = (set) => {\n    setExpanded((old) => (typeof set !== 'undefined' ? set : !old))\n  }\n\n  const path = []\n\n  let type = typeof value\n  let subEntries\n  const subEntryPages = []\n\n  const makeProperty = (sub) => {\n    const newPath = path.concat(sub.label)\n    const subDefaultExpanded =\n      defaultExpanded === true\n        ? { [sub.label]: true }\n        : defaultExpanded?.[sub.label]\n    return {\n      ...sub,\n      subPath: sub,\n      path: newPath,\n      depth: depth + 1,\n      defaultExpanded: subDefaultExpanded,\n    }\n  }\n\n  if (Array.isArray(value)) {\n    type = 'array'\n    subEntries = value.map((d, i) =>\n      makeProperty({\n        label: i,\n        value: d,\n      }),\n    )\n  } else if (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value[Symbol.iterator] === 'function'\n  ) {\n    type = 'Iterable'\n    subEntries = Array.from(value, (val, i) =>\n      makeProperty({\n        label: i,\n        value: val,\n      }),\n    )\n  } else if (typeof value === 'function') {\n    type = 'function'\n  } else if (typeof value === 'object' && value !== null) {\n    type = 'object'\n    // eslint-disable-next-line no-shadow\n    subEntries = Object.entries(value).map(([label, value]) =>\n      makeProperty({\n        label,\n        value,\n      }),\n    )\n  }\n\n  if (subEntries) {\n    let i = 0\n\n    while (i < subEntries.length) {\n      subEntryPages.push(subEntries.slice(i, i + pageSize))\n      i = i + pageSize\n    }\n  }\n\n  return renderer({\n    handleEntry: (entry) => (\n      <Explorer key={entry.label} renderer={renderer} {...rest} {...entry} />\n    ),\n    type,\n    subEntries,\n    subEntryPages,\n    depth,\n    value,\n    path,\n    expanded,\n    toggle,\n    pageSize,\n    ...rest,\n  })\n}\n"],"names":["Entry","styled","fontFamily","fontSize","lineHeight","outline","wordBreak","Label","cursor","color","Value","props","theme","danger","SubEntries","marginLeft","paddingLeft","borderLeft","Info","Expander","expanded","style","rest","React","display","transition","transform","DefaultRenderer","handleEntry","label","value","subEntries","subEntryPages","type","toggle","pageSize","renderer","valueSnapshot","setValueSnapshot","useState","undefined","expandedPages","setExpandedPages","refreshValueSnapshot","length","String","toLowerCase","map","entry","entries","index","old","includes","filter","d","JSON","stringify","Object","getOwnPropertyNames","Explorer","defaultExpanded","depth","setExpanded","set","path","makeProperty","sub","newPath","concat","subDefaultExpanded","subPath","Array","isArray","i","Symbol","iterator","from","val","push","slice","_extends"],"mappings":";;;;;;;;;;;;;;;;;;;;;;MAMaA,KAAK,GAAGC,YAAM,CAAC,KAAD,EAAQ;AACjCC,EAAAA,UAAU,EAAE,kBADqB;AAEjCC,EAAAA,QAAQ,EAAE,QAFuB;AAGjCC,EAAAA,UAAU,EAAE,KAHqB;AAIjCC,EAAAA,OAAO,EAAE,MAJwB;AAKjCC,EAAAA,SAAS,EAAE,YAAA;AALsB,CAAR,EAApB;MAQMC,KAAK,GAAGN,YAAM,CAAC,MAAD,EAAS;AAClCO,EAAAA,MAAM,EAAE,SAD0B;AAElCC,EAAAA,KAAK,EAAE,OAAA;AAF2B,CAAT,EAApB;AAKA,MAAMC,KAAK,GAAGT,YAAM,CAAC,MAAD,EAAS,CAACU,KAAD,EAAQC,KAAR,MAAmB;AACrDH,EAAAA,KAAK,EAAEG,KAAK,CAACC,MAAAA;AADwC,CAAnB,CAAT,EAApB;MAIMC,UAAU,GAAGb,YAAM,CAAC,KAAD,EAAQ;AACtCc,EAAAA,UAAU,EAAE,OAD0B;AAEtCC,EAAAA,WAAW,EAAE,MAFyB;AAGtCC,EAAAA,UAAU,EAAE,2BAAA;AAH0B,CAAR,EAAzB;MAMMC,IAAI,GAAGjB,YAAM,CAAC,MAAD,EAAS;AACjCQ,EAAAA,KAAK,EAAE,MAD0B;AAEjCN,EAAAA,QAAQ,EAAE,OAAA;AAFuB,CAAT,EAAnB;AAKA,MAAMgB,QAAQ,GAAG,IAAA,IAAA;AAAA,EAAC,IAAA;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAK,GAAG,EAApB;AAAwB,IAAGC,GAAAA,IAAAA;AAA3B,GAAD,GAAA,IAAA,CAAA;AAAA,EACtB,oBAAAC,yBAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,cADJ;AAELC,MAAAA,UAAU,EAAE,cAFP;AAGLC,MAAAA,SAAS,EAAA,SAAA,IAAYN,QAAQ,GAAG,EAAH,GAAQ,CAA5B,CAAA,GAAA,OAAA,IAAqCC,KAAK,CAACK,SAAN,IAAmB,EAAxD,CAHJ;AAIL,MAAGL,GAAAA,KAAAA;AAJE,KAAA;AADT,GADsB,EAAA,QAAA,CAAA,CAAA;AAAA,EAAjB;;AAaP,MAAMM,eAAe,GAAG,KAalB,IAAA;AAAA,EAbmB,IAAA;AACvBC,IAAAA,WADuB;AAEvBC,IAAAA,KAFuB;AAGvBC,IAAAA,KAHuB;AAIvB;AACAC,IAAAA,UALuB;AAMvBC,IAAAA,aANuB;AAOvBC,IAAAA,IAPuB;AAQvB;AACAb,IAAAA,QATuB;AAUvBc,IAAAA,MAVuB;AAWvBC,IAAAA,QAXuB;AAYvBC,IAAAA,QAAAA;AAZuB,GAanB,GAAA,KAAA,CAAA;AACJ,EAAM,MAAA,CAACC,aAAD,EAAgBC,gBAAhB,CAAA,GAAoCf,yBAAK,CAACgB,QAAN,CAAeC,SAAf,CAA1C,CAAA;AACA,EAAM,MAAA,CAACC,aAAD,EAAgBC,gBAAhB,CAAA,GAAoCnB,yBAAK,CAACgB,QAAN,CAAe,EAAf,CAA1C,CAAA;;AAEA,EAAMI,MAAAA,oBAAoB,GAAG,MAAM;AACjCL,IAAAA,gBAAgB,CAACR,KAAK,EAAN,CAAhB,CAAA;AACD,GAFD,CAAA;;AAIA,EAAA,oBACEP,wCAAC,KAAD,EAAA;AAAO,IAAA,GAAG,EAAEM,KAAAA;AAAZ,GACGG,EAAAA,aAAa,QAAb,IAAAA,aAAa,CAAEY,MAAf,gBACCrB,yBACE,CAAA,aAAA,CAAAA,yBAAA,CAAA,QAAA,EAAA,IAAA,eAAAA,yBAAA,CAAA,aAAA,CAAC,KAAD,EAAA;AAAO,IAAA,OAAO,EAAE,MAAMW,MAAM,EAAA;AAA5B,GAAA,eACEX,wCAAC,QAAD,EAAA;AAAU,IAAA,QAAQ,EAAEH,QAAAA;AAApB,GAAA,CADF,EACoCS,GAAAA,EAAAA,KADpC,EAC2C,GAD3C,eAEEN,yBAAC,CAAA,aAAA,CAAA,IAAD,EACGsB,IAAAA,EAAAA,MAAM,CAACZ,IAAD,CAAN,CAAaa,WAAb,EAA+B,KAAA,UAA/B,GAA4C,aAA5C,GAA4D,EAD/D,EAEGf,UAAU,CAACa,MAFd,EAAA,GAAA,EAEuBb,UAAU,CAACa,MAAX,GAAoB,CAApB,GAAA,OAAA,GAAA,MAFvB,CAFF,CADF,EAQGxB,QAAQ,GACPY,aAAa,CAACY,MAAd,KAAyB,CAAzB,gBACErB,yBAAA,CAAA,aAAA,CAAC,UAAD,EAAA,IAAA,EACGQ,UAAU,CAACgB,GAAX,CAAgBC,KAAD,IAAWpB,WAAW,CAACoB,KAAD,CAArC,CADH,CADF,gBAKEzB,wCAAC,UAAD,EAAA,IAAA,EACGS,aAAa,CAACe,GAAd,CAAkB,CAACE,OAAD,EAAUC,KAAV,kBACjB3B,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,GAAG,EAAE2B,KAAAA;AAAV,GAAA,eACE3B,yBAAC,CAAA,aAAA,CAAA,KAAD,EACE,IAAA,eAAAA,yBAAA,CAAA,aAAA,CAAC,KAAD,EAAA;AACE,IAAA,OAAO,EAAE,MACPmB,gBAAgB,CAAES,GAAD,IACfA,GAAG,CAACC,QAAJ,CAAaF,KAAb,CACIC,GAAAA,GAAG,CAACE,MAAJ,CAAYC,CAAD,IAAOA,CAAC,KAAKJ,KAAxB,CADJ,GAEI,CAAC,GAAGC,GAAJ,EAASD,KAAT,CAHU,CAAA;AAFpB,GAAA,eASE3B,wCAAC,QAAD,EAAA;AAAU,IAAA,QAAQ,EAAEH,QAAAA;AAApB,GATF,CAAA,EAAA,IAAA,EASqC8B,KAAK,GAAGf,QAT7C,EAAA,MAAA,EAS2D,GAT3D,EAUGe,KAAK,GAAGf,QAAR,GAAmBA,QAAnB,GAA8B,CAVjC,EAAA,GAAA,CADF,EAaGM,aAAa,CAACW,QAAd,CAAuBF,KAAvB,CAAA,gBACC3B,yBAAC,CAAA,aAAA,CAAA,UAAD,EACG0B,IAAAA,EAAAA,OAAO,CAACF,GAAR,CAAaC,KAAD,IAAWpB,WAAW,CAACoB,KAAD,CAAlC,CADH,CADD,GAIG,IAjBN,CADF,CADD,CADH,CANK,GAgCL,IAxCN,CADD,GA2CGf,IAAI,KAAK,UAAT,gBACFV,yBACE,CAAA,aAAA,CAAAA,yBAAA,CAAA,QAAA,EAAA,IAAA,eAAAA,yBAAA,CAAA,aAAA,CAAC,QAAD,EAAA;AACE,IAAA,QAAQ,EAAEa,QADZ;AAEE,IAAA,KAAK,eACHb,yBAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,MAAA,OAAO,EAAEoB,oBAAAA;AAAjB,KAAA,eACEpB,wCAAC,KAAD,EAAA,IAAA,EAAQM,KAAR,CADF,EAAA,eAAA,EAC4B,GAD5B,CAHJ;AAOE,IAAA,KAAK,EAAEQ,aAPT;AAQE,IAAA,eAAe,EAAE,EAAA;AARnB,GAAA,CADF,CADE,gBAcFd,yBACE,CAAA,aAAA,CAAAA,yBAAA,CAAA,QAAA,EAAA,IAAA,eAAAA,yBAAA,CAAA,aAAA,CAAC,KAAD,EAAQM,IAAAA,EAAAA,KAAR,EADF,GAAA,CAAA,EAC0B,GAD1B,eAEEN,yBAAC,CAAA,aAAA,CAAA,KAAD,QACGgC,IAAI,CAACC,SAAL,CAAe1B,KAAf,EAAsB2B,MAAM,CAACC,mBAAP,CAA2BD,MAAM,CAAC3B,KAAD,CAAjC,CAAtB,CADH,CAFF,CA1DJ,CADF,CAAA;AAoED,CAzFD,CAAA;;AA2Fe,SAAS6B,QAAT,CAOZ,KAAA,EAAA;AAAA,EAP8B,IAAA;AAC/B7B,IAAAA,KAD+B;AAE/B8B,IAAAA,eAF+B;AAG/BxB,IAAAA,QAAQ,GAAGT,eAHoB;AAI/BQ,IAAAA,QAAQ,GAAG,GAJoB;AAK/B0B,IAAAA,KAAK,GAAG,CALuB;AAM/B,IAAGvC,GAAAA,IAAAA;AAN4B,GAO9B,GAAA,KAAA,CAAA;AACD,EAAM,MAAA,CAACF,QAAD,EAAW0C,WAAX,CAAA,GAA0BvC,yBAAK,CAACgB,QAAN,CAAeqB,eAAf,CAAhC,CAAA;;AAEA,EAAM1B,MAAAA,MAAM,GAAI6B,GAAD,IAAS;AACtBD,IAAAA,WAAW,CAAEX,GAAD,IAAU,OAAOY,GAAP,KAAe,WAAf,GAA6BA,GAA7B,GAAmC,CAACZ,GAA/C,CAAX,CAAA;AACD,GAFD,CAAA;;AAIA,EAAMa,MAAAA,IAAI,GAAG,EAAb,CAAA;AAEA,EAAI/B,IAAAA,IAAI,GAAG,OAAOH,KAAlB,CAAA;AACA,EAAA,IAAIC,UAAJ,CAAA;AACA,EAAMC,MAAAA,aAAa,GAAG,EAAtB,CAAA;;AAEA,EAAMiC,MAAAA,YAAY,GAAIC,GAAD,IAAS;AAC5B,IAAMC,MAAAA,OAAO,GAAGH,IAAI,CAACI,MAAL,CAAYF,GAAG,CAACrC,KAAhB,CAAhB,CAAA;AACA,IAAA,MAAMwC,kBAAkB,GACtBT,eAAe,KAAK,IAApB,GACI;AAAE,MAACM,CAAAA,GAAG,CAACrC,KAAL,GAAa,IAAA;AAAf,KADJ,GAEI+B,eAFJ,IAEIA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,eAAe,CAAGM,GAAG,CAACrC,KAAP,CAHrB,CAAA;AAIA,IAAO,OAAA,EACL,GAAGqC,GADE;AAELI,MAAAA,OAAO,EAAEJ,GAFJ;AAGLF,MAAAA,IAAI,EAAEG,OAHD;AAILN,MAAAA,KAAK,EAAEA,KAAK,GAAG,CAJV;AAKLD,MAAAA,eAAe,EAAES,kBAAAA;AALZ,KAAP,CAAA;AAOD,GAbD,CAAA;;AAeA,EAAA,IAAIE,KAAK,CAACC,OAAN,CAAc1C,KAAd,CAAJ,EAA0B;AACxBG,IAAAA,IAAI,GAAG,OAAP,CAAA;AACAF,IAAAA,UAAU,GAAGD,KAAK,CAACiB,GAAN,CAAU,CAACO,CAAD,EAAImB,CAAJ,KACrBR,YAAY,CAAC;AACXpC,MAAAA,KAAK,EAAE4C,CADI;AAEX3C,MAAAA,KAAK,EAAEwB,CAAAA;AAFI,KAAD,CADD,CAAb,CAAA;AAMD,GARD,MAQO,IACLxB,KAAK,KAAK,IAAV,IACA,OAAOA,KAAP,KAAiB,QADjB,IAEA,OAAOA,KAAK,CAAC4C,MAAM,CAACC,QAAR,CAAZ,KAAkC,UAH7B,EAIL;AACA1C,IAAAA,IAAI,GAAG,UAAP,CAAA;AACAF,IAAAA,UAAU,GAAGwC,KAAK,CAACK,IAAN,CAAW9C,KAAX,EAAkB,CAAC+C,GAAD,EAAMJ,CAAN,KAC7BR,YAAY,CAAC;AACXpC,MAAAA,KAAK,EAAE4C,CADI;AAEX3C,MAAAA,KAAK,EAAE+C,GAAAA;AAFI,KAAD,CADD,CAAb,CAAA;AAMD,GAZM,MAYA,IAAI,OAAO/C,KAAP,KAAiB,UAArB,EAAiC;AACtCG,IAAAA,IAAI,GAAG,UAAP,CAAA;AACD,GAFM,MAEA,IAAI,OAAOH,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAA3C,EAAiD;AACtDG,IAAAA,IAAI,GAAG,QAAP,CADsD;;AAGtDF,IAAAA,UAAU,GAAG0B,MAAM,CAACR,OAAP,CAAenB,KAAf,CAAsBiB,CAAAA,GAAtB,CAA0B,KAAA,IAAA;AAAA,MAAA,IAAC,CAAClB,KAAD,EAAQC,KAAR,CAAD,GAAA,KAAA,CAAA;AAAA,MAAA,OACrCmC,YAAY,CAAC;AACXpC,QAAAA,KADW;AAEXC,QAAAA,KAAAA;AAFW,OAAD,CADyB,CAAA;AAAA,KAA1B,CAAb,CAAA;AAMD,GAAA;;AAED,EAAA,IAAIC,UAAJ,EAAgB;AACd,IAAI0C,IAAAA,CAAC,GAAG,CAAR,CAAA;;AAEA,IAAA,OAAOA,CAAC,GAAG1C,UAAU,CAACa,MAAtB,EAA8B;AAC5BZ,MAAAA,aAAa,CAAC8C,IAAd,CAAmB/C,UAAU,CAACgD,KAAX,CAAiBN,CAAjB,EAAoBA,CAAC,GAAGtC,QAAxB,CAAnB,CAAA,CAAA;AACAsC,MAAAA,CAAC,GAAGA,CAAC,GAAGtC,QAAR,CAAA;AACD,KAAA;AACF,GAAA;;AAED,EAAA,OAAOC,QAAQ,CAAC;AACdR,IAAAA,WAAW,EAAGoB,KAAD,iBACXzB,wCAAC,QAAD,EAAAyD,oCAAA,CAAA;AAAU,MAAA,GAAG,EAAEhC,KAAK,CAACnB,KAArB;AAA4B,MAAA,QAAQ,EAAEO,QAAAA;AAAtC,KAAoDd,EAAAA,IAApD,EAA8D0B,KAA9D,CAFY,CAAA;AAIdf,IAAAA,IAJc;AAKdF,IAAAA,UALc;AAMdC,IAAAA,aANc;AAOd6B,IAAAA,KAPc;AAQd/B,IAAAA,KARc;AASdkC,IAAAA,IATc;AAUd5C,IAAAA,QAVc;AAWdc,IAAAA,MAXc;AAYdC,IAAAA,QAZc;AAad,IAAGb,GAAAA,IAAAA;AAbW,GAAD,CAAf,CAAA;AAeD;;;;;;;;;;"}