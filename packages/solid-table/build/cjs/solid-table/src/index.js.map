{"version":3,"file":"index.js","sources":["../../../../src/index.tsx"],"sourcesContent":["// /** @jsxImportSource solid-js */\nimport {\n  TableOptions,\n  createTable,\n  TableOptionsResolved,\n  RowData,\n} from '@tanstack/table-core'\nimport { createComputed, mergeProps, createComponent } from 'solid-js'\nimport { createStore } from 'solid-js/store'\n\nexport * from '@tanstack/table-core'\n\nexport function flexRender<TProps extends {}>(Comp: any, props: TProps) {\n  if (!Comp) return null\n\n  if (typeof Comp === 'function') {\n    return createComponent(Comp, props)\n  }\n\n  return Comp\n}\n\nexport function createSolidTable<TData extends RowData>(\n  options: TableOptions<TData>\n) {\n  const resolvedOptions: TableOptionsResolved<TData> = mergeProps(\n    {\n      state: {}, // Dummy state\n      onStateChange: () => {}, // noop\n      renderFallbackValue: null,\n      mergeOptions: (\n        defaultOptions: TableOptions<TData>,\n        options: Partial<TableOptions<TData>>\n      ) => {\n        return mergeProps(defaultOptions, options) as TableOptions<TData>\n      },\n    },\n    options\n  )\n\n  const table = createTable<TData>(resolvedOptions)\n  const [state, setState] = createStore(table.initialState)\n\n  createComputed(() => {\n    table.setOptions(prev => {\n      return mergeProps(prev, options, {\n        state: mergeProps(state, options.state || {}),\n        // Similarly, we'll maintain both our internal state and any user-provided\n        // state.\n        onStateChange: (updater: any) => {\n          // merging isn't required because stores shallow update\n          setState(updater)\n\n          options.onStateChange?.(updater)\n        },\n      })\n    })\n  })\n\n  return table\n}\n"],"names":["flexRender","Comp","props","createComponent","createSolidTable","options","resolvedOptions","mergeProps","state","onStateChange","renderFallbackValue","mergeOptions","defaultOptions","table","createTable","setState","createStore","initialState","createComputed","setOptions","prev","updater"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAYO,SAASA,UAAT,CAAuCC,IAAvC,EAAkDC,KAAlD,EAAiE;AACtE,EAAA,IAAI,CAACD,IAAL,EAAW,OAAO,IAAP,CAAA;;AAEX,EAAA,IAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC9B,IAAA,OAAOE,uBAAe,CAACF,IAAD,EAAOC,KAAP,CAAtB,CAAA;AACD,GAAA;;AAED,EAAA,OAAOD,IAAP,CAAA;AACD,CAAA;AAEM,SAASG,gBAAT,CACLC,OADK,EAEL;AACA,EAAMC,MAAAA,eAA4C,GAAGC,kBAAU,CAC7D;AACEC,IAAAA,KAAK,EAAE,EADT;AACa;AACXC,IAAAA,aAAa,EAAE,MAAM,EAFvB;AAE2B;AACzBC,IAAAA,mBAAmB,EAAE,IAHvB;AAIEC,IAAAA,YAAY,EAAE,CACZC,cADY,EAEZP,OAFY,KAGT;AACH,MAAA,OAAOE,kBAAU,CAACK,cAAD,EAAiBP,OAAjB,CAAjB,CAAA;AACD,KAAA;AATH,GAD6D,EAY7DA,OAZ6D,CAA/D,CAAA;AAeA,EAAA,MAAMQ,KAAK,GAAGC,iBAAW,CAAQR,eAAR,CAAzB,CAAA;AACA,EAAM,MAAA,CAACE,KAAD,EAAQO,QAAR,CAAA,GAAoBC,iBAAW,CAACH,KAAK,CAACI,YAAP,CAArC,CAAA;AAEAC,EAAAA,sBAAc,CAAC,MAAM;AACnBL,IAAAA,KAAK,CAACM,UAAN,CAAiBC,IAAI,IAAI;AACvB,MAAA,OAAOb,kBAAU,CAACa,IAAD,EAAOf,OAAP,EAAgB;AAC/BG,QAAAA,KAAK,EAAED,kBAAU,CAACC,KAAD,EAAQH,OAAO,CAACG,KAAR,IAAiB,EAAzB,CADc;AAE/B;AACA;AACAC,QAAAA,aAAa,EAAGY,OAAD,IAAkB;AAC/B;AACAN,UAAAA,QAAQ,CAACM,OAAD,CAAR,CAAA;AAEAhB,UAAAA,OAAO,CAACI,aAAR,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAJ,OAAO,CAACI,aAAR,CAAwBY,OAAxB,CAAA,CAAA;AACD,SAAA;AAT8B,OAAhB,CAAjB,CAAA;AAWD,KAZD,CAAA,CAAA;AAaD,GAda,CAAd,CAAA;AAgBA,EAAA,OAAOR,KAAP,CAAA;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}